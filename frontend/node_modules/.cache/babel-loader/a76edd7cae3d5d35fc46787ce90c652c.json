{"ast":null,"code":"import { FETCH_ITEMS_FAILURE, FETCH_ITEMS_REQUEST, FETCH_ITEMS_SUCCESS } from \"./itemTypes\";\nconst initialState = {\n  loading: false,\n  items: [],\n  error: \"\"\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ITEMS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_ITEMS_SUCCESS:\n      return {\n        loading: false,\n        items: action.payload,\n        error: \"\"\n      };\n\n    case FETCH_ITEMS_FAILURE:\n      return {\n        loading: false,\n        items: [],\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/UgnÄ—/Desktop/ECommerce(Node.js + React.js)/frontend/src/App/content/itemReducer.js"],"names":["FETCH_ITEMS_FAILURE","FETCH_ITEMS_REQUEST","FETCH_ITEMS_SUCCESS","initialState","loading","items","error","reducer","state","action","type","payload"],"mappings":"AAAA,SACEA,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,aAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAKA,MAAMC,OAAO,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,mBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKF,mBAAL;AACE,aAAO;AACLE,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFT;AAGLL,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKN,mBAAL;AACE,aAAO;AACLI,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAHT,OAAP;;AAKF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBD;;AAuBA,eAAeD,OAAf","sourcesContent":["import {\r\n  FETCH_ITEMS_FAILURE,\r\n  FETCH_ITEMS_REQUEST,\r\n  FETCH_ITEMS_SUCCESS,\r\n} from \"./itemTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  items: [],\r\n  error: \"\",\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ITEMS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_ITEMS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        items: action.payload,\r\n        error: \"\",\r\n      };\r\n    case FETCH_ITEMS_FAILURE:\r\n      return {\r\n        loading: false,\r\n        items: [],\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}